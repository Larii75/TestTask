//BSD 3-Clause License

//Copyright (c) 2021, Andrii Linchenko
//All rights reserved.

//Redistribution and use in source and binary forms, with or without
//modification, are permitted provided that the following conditions are met:

//1. Redistributions of source code must retain the above copyright notice, this
//   list of conditions and the following disclaimer.

//2. Redistributions in binary form must reproduce the above copyright notice,
//   this list of conditions and the following disclaimer in the documentation
//   and/or other materials provided with the distribution.

//3. Neither the name of the copyright holder nor the names of its
//   contributors may be used to endorse or promote products derived from
//   this software without specific prior written permission.

//THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
//AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
//IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
//DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
//FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
//DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
//SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
//CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
//OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
//OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	КоличествоЗадач = 5;
	Для НомерЗадачи = 1 По КоличествоЗадач Цикл
		ИнициализироватьУсловиеЗадачи(НомерЗадачи, Этаформа["Задача" + Строка(НомерЗадачи) + "Описание"], Обработки.НавигаторПоЗадачам.ПолучитьМакет("УсловиеЗадачи" + Строка(НомерЗадачи)));	 
	КонецЦикла;
	
КонецПроцедуры

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Для НомерЗадачи = 1 По КоличествоЗадач Цикл
		ИнициализироватьСсылкиРешенийЗадач(НомерЗадачи, Этаформа["Задача" + Строка(НомерЗадачи) + "Ссылка"]);	 
	КонецЦикла;
	
КонецПроцедуры

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаСервереБезКонтекста
Процедура ИнициализироватьУсловиеЗадачи(Знач НомерЗадачи, ФорматированныйДокумент, Знач ТекстМакета)

	ФорматированныйДокумент.УстановитьФорматированнуюСтроку(Новый ФорматированнаяСтрока(ТекстМакета.ПолучитьТекст()));	

КонецПроцедуры // ИнициализироватьУсловиеЗадачи()

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте
Процедура ИнициализироватьСсылкиРешенийЗадач(НомерЗадачи, ФорматированныйДокумент)

	Если НомерЗадачи = 1 Тогда
		ФорматированныйДокумент.УстановитьФорматированнуюСтроку(Новый ФорматированнаяСтрока("Удаление строк табличной части обработки.",,,,ПолучитьНавигационнуюСсылку(ПолучитьФорму("Обработка.УдалениеСтрокТЧОбработки.Форма.Форма"))));		
	ИначеЕсли НомерЗадачи = 2 Тогда
		ФорматированныйДокумент.УстановитьФорматированнуюСтроку(Новый ФорматированнаяСтрока(Новый ФорматированнаяСтрока("Приходные.",,,,ПолучитьНавигационнуюСсылку(ПолучитьФорму("Документ.Приходная.ФормаСписка"))), Символы.ПС, Символы.ПС, Новый ФорматированнаяСтрока("Расходные.",,,,ПолучитьНавигационнуюСсылку(ПолучитьФорму("Документ.Расходная.ФормаСписка"))), Символы.ПС, Символы.ПС, Новый ФорматированнаяСтрока("Регистр ""Товары на складах"".",,,,ПолучитьНавигационнуюСсылку(ПолучитьФорму("РегистрНакопления.ТоварыНаСкладах.ФормаСписка"))), Символы.ПС, Символы.ПС, Новый ФорматированнаяСтрока("Отчет ""Ведомость по товарам на складах"".",,,,ПолучитьНавигационнуюСсылку(ПолучитьФорму("Отчет.ВедомостьПоТоварамНаСкладах.Форма.ФормаОтчета")))));
	ИначеЕсли НомерЗадачи = 3 Тогда
		ФорматированныйДокумент.УстановитьФорматированнуюСтроку(Новый ФорматированнаяСтрока("Отчет здесь.", , , , ПолучитьНавигационнуюСсылку(ПолучитьФорму("Отчет.РеестрВалютныхПриходныхНакладных.Форма.ФормаОтчета"))));
	ИначеЕсли НомерЗадачи = 4 Тогда
		ФорматированныйДокумент.УстановитьФорматированнуюСтроку(Новый ФорматированнаяСтрока("Уточним сразу, что табличных полей существует свойство ""МножественныйВыбор"",
		|который позволяет устанавливать выделение нескольких строк при зажатой
		|клавише CTRL, и получать идентификаторы выделенных строк в свойстве ""ВыделенныеСтроки"" 
		|тип Массив.
		|
		|Если пользователи настаивают на выборе строк флажками, то:
		|
		|В Обычных формах можно создать глобальную переменную СтрокиВыделенные с типом Соответствие в модуле формы документа.
		|В обработчике ПриПолученииДанных:
		|", Новый ФорматированнаяСтрока("
		|Для каждого ",, Новый Цвет(255, 0, 0)), Новый ФорматированнаяСтрока("ОформлениеСтроки ", , Новый Цвет(0, 0, 255)), Новый ФорматированнаяСтрока("Из ", , Новый Цвет(255, 0, 0)), Новый ФорматированнаяСтрока("ОформленияСтрок ", , Новый Цвет(0, 0, 255)), Новый ФорматированнаяСтрока("Цикл" + Символы.ПС,, Новый Цвет(255, 0, 0)),
		Новый ФорматированнаяСтрока("ОформлениеСтроки.Ячейки.НомерСтроки.ОтображатьФлажок ", , Новый Цвет(0, 0, 255)), Новый ФорматированнаяСтрока("= Истина;
		|", , Новый Цвет(255, 0, 0)), Новый ФорматированнаяСтрока("	Если ", , Новый Цвет(255, 0 ,0)), Новый ФорматированнаяСтрока("ОформлениеСтроки.Ячейки.НомерСтроки.Флажок ", , Новый Цвет(0, 0, 255)), Новый ФорматированнаяСтрока("Тогда
		|", , Новый Цвет(255, 0, 0)), Новый ФорматированнаяСтрока("	СтрокиВыделенные[ОформлениеСтроки.ДанныеСтроки] ", , Новый Цвет(0, 0, 255)), Новый ФорматированнаяСтрока("= Истина;
		|	Иначе
		|", , Новый Цвет(255, 0, 0)), Новый ФорматированнаяСтрока("	СтрокиВыделенные[ОформлениеСтроки.ДанныеСтроки] ", , Новый Цвет(0, 0, 255)), Новый ФорматированнаяСтрока("= Ложь;
		|	КонецЕсли;
		|КонецЦикла;", , Новый Цвет(255, 0, 0)), Новый ФорматированнаяСтрока("
		|
		|И создаем пустой обработчик ПриИзмененииФлажка, чтобы вызывался обработчик ПриПолученииДанных.
		|В противном случае(протестировано на платформе 8.3.18.1208) ПриПолученииДанных при изменении флажка вызываться не будет.
		|
		|В Управляемых формах решение еще проще. Необходимо добавить в конструкторе формы для Объект.ТабличнаяЧасть реквизит тип Булево и свойством ""Использовать всегда"" и перетянуть этот реквизит в табличное поле.
		|")));
		
	ИначеЕсли НомерЗадачи = 5 Тогда
		ФорматированныйДокумент.УстановитьФорматированнуюСтроку(Новый ФорматированнаяСтрока("Временные таблицы, это физические таблицы создаваемые для обработки данных — особенно удобные во время преобразования, где промежуточные результаты являются временными. Хранятся обычно отдельно от основной базы данных в выделенном пуле SQL (например, в базе TempDB MSSQL).
		|Временные таблицы существуют на уровне сеанса. Их можно просмотреть только в сеансе, в котором они были созданы. Поэтому после выхода из сеанса они автоматически удаляются.
		|
		|Виртуальные таблицы не являются физическими, они являются аналогом обычных представлений СУБД(""нематериализированных view""), за исключением того, что они не хранятся в пуле SQL, а генерируются платформой 1С. На уровне СУБД представляют собой сложный запрос из нескольких вложенных запросов с выборкой данных из физических таблиц регистра, а также в некоторых случаях таблиц итогов.
		|
		|Особеностями являются необходимость включенного механизма итогов для некоторых типов и видов регистров (накопления остатки, бухгалтерии) для использования виртуальных таблиц.
		|Также особенность в необходимости установки условий в параметрах виртуальной таблицы."));
		
	КонецЕсли;	

КонецПроцедуры // ИнициализироватьСсылкиРешенийЗадач()
