//BSD 3-Clause License

//Copyright (c) 2021, Andrii Linchenko
//All rights reserved.

//Redistribution and use in source and binary forms, with or without
//modification, are permitted provided that the following conditions are met:

//1. Redistributions of source code must retain the above copyright notice, this
//   list of conditions and the following disclaimer.

//2. Redistributions in binary form must reproduce the above copyright notice,
//   this list of conditions and the following disclaimer in the documentation
//   and/or other materials provided with the distribution.

//3. Neither the name of the copyright holder nor the names of its
//   contributors may be used to endorse or promote products derived from
//   this software without specific prior written permission.

//THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
//AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
//IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
//DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
//FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
//DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
//SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
//CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
//OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
//OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
	
#Область ОбработчикиСобытий

// Обработчик события создания этой формы на сервере
//
// Параметры:
// Отказ  - Булево - Отказ от создания формы
//                 
// СтандартнаяОбработка  - Булево - Выполнение стандартного регламента процедуры
//                 
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнициализацияСКД();
	Элементы.КомпоновщикНастройкиОтборСвойстваЭлементаПользовательскойНастройки.Видимость = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ОсновныеПроцедуры

// Вызывает Серверный метод
//
&НаКлиенте
Процедура УдалитьСтроки(Команда)
	
	УдалитьСтрокиНаСервере();
	
КонецПроцедуры

// Создает ТаблицуЗначений на основании СКД и Настройки.Отбор
// И удаляет строки ТЧ
//
&НаСервере
Процедура УдалитьСтрокиНаСервере()
	
	Схема = ПолучитьИзВременногоХранилища(АдресСКД);
	Настройки = Компоновщик.ПолучитьНастройки();
	ЭлементПорядкаКомпоновкиДанных = Настройки.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
	ЭлементПорядкаКомпоновкиДанных.Поле = Новый ПолеКомпоновкиДанных("НомерСтроки");
	ЭлементПорядкаКомпоновкиДанных.ТипУпорядочивания = НаправлениеСортировкиКомпоновкиДанных.Убыв;
	  
	///Если мы не установили отбор, то строки не должны удалятся.
	Если Настройки.Отбор.Элементы.Количество() Тогда
		КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
		ТипМакета = Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений");
		МакетКомпоновки = КомпоновщикМакета.Выполнить(Схема, Настройки,,, ТипМакета, Ложь);
		
		ТЗ = Объект.ТабличнаяЧасть1.Выгрузить(,"НомерСтроки");
		ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
		ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, Новый Структура("Таблица", ТЗ));
		
		Результат = Новый ТаблицаЗначений;
		ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
		ПроцессорВывода.УстановитьОбъект(Результат);
		ПроцессорВывода.Вывести(ПроцессорКомпоновки);
		
		Для Каждого Стр Из Результат Цикл
			Объект.ТабличнаяЧасть1.Удалить(Стр.НомерСтроки - 1);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Создает СхемуКопоновкиДанных, типизирует НаборДанныхОбъект
// и помещает Схему во ВременноеХранилище
//
&НаСервере
Процедура ИнициализацияСКД()
	
	Схема = Новый СхемаКомпоновкиДанных;
	Источник = Схема.ИсточникиДанных.Добавить();
	Источник.Имя = "ИсточникДанных1";
	Источник.ТипИсточникаДанных = "Local";
	
	НовыйНаборДанных = Схема.НаборыДанных.Добавить(Тип("НаборДанныхОбъектСхемыКомпоновкиДанных"));
	НовыйНаборДанных.Имя = "НаборДанных1";
	НовыйНаборДанных.ИмяОбъекта = "Таблица";
	НовыйНаборДанных.ИсточникДанных = Источник.Имя;	
	
	ТЗ = Объект.ТабличнаяЧасть1.Выгрузить(,"НомерСтроки");
	///Цикл - задел на желание добавить колонки в ТЗ
	Для Каждого Колонка Из ТЗ.Колонки Цикл
		НовоеПоле = НовыйНаборДанных.Поля.Добавить(Тип("ПолеНабораДанныхСхемыКомпоновкиДанных"));
		НовоеПоле.Поле = Колонка.Имя;
		НовоеПоле.ПутьКДанным = Колонка.Имя;
		НовоеПоле.ТипЗначения = Колонка.ТипЗначения;
	КонецЦикла;	
	
	НоваяСтруктура = Схема.НастройкиПоУмолчанию.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
	НовыйЭлементСтруктуры = НоваяСтруктура.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
	НовыйЭлементСтруктуры.Поле = Новый ПолеКомпоновкиДанных("НомерСтроки");
	
	АвтоВыбранноеПолеКомпоновкиДанных = НоваяСтруктура.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
		
	АдресСКД = ПоместитьВоВременноеХранилище(Схема, УникальныйИдентификатор);
	Компоновщик.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСКД));
	Компоновщик.ЗагрузитьНастройки(Схема.НастройкиПоУмолчанию);
	
КонецПроцедуры

#КонецОбласти
