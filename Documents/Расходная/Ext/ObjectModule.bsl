//BSD 3-Clause License

//Copyright (c) 2021, Andrii Linchenko
//All rights reserved.

//Redistribution and use in source and binary forms, with or without
//modification, are permitted provided that the following conditions are met:

//1. Redistributions of source code must retain the above copyright notice, this
//   list of conditions and the following disclaimer.

//2. Redistributions in binary form must reproduce the above copyright notice,
//   this list of conditions and the following disclaimer in the documentation
//   and/or other materials provided with the distribution.

//3. Neither the name of the copyright holder nor the names of its
//   contributors may be used to endorse or promote products derived from
//   this software without specific prior written permission.

//THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
//AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
//IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
//DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
//FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
//DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
//SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
//CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
//OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
//OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

Процедура ОбработкаПроведения(Отказ, Режим)

	Для Каждого Движение Из Движения Цикл
		Движение.Записывать = Истина;
		Движение.Очистить();
		Движение.Записать();
		Движение.Записывать = Истина;
	КонецЦикла;
	
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ТоварыНаСкладах");
	ЭлементБлокировки.УстановитьЗначение("Склад", Склад);
	ЭлементБлокировки.ИсточникДанных = Товары;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	Блокировка.Заблокировать();
	
	// регистр ТоварыНаСкладах Расход	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходнаяТовары.Номенклатура КАК Номенклатура,
		|	СУММА(РасходнаяТовары.Количество) КАК Количество,
		|	СУММА(РасходнаяТовары.Сумма) КАК Сумма
		|ПОМЕСТИТЬ ВТТЧ
		|ИЗ
		|	Документ.Расходная.Товары КАК РасходнаяТовары
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Номенклатура КАК СправочникНоменклатура
		|		ПО РасходнаяТовары.Номенклатура = СправочникНоменклатура.Ссылка
		|ГДЕ
		|	РасходнаяТовары.Ссылка = &Ссылка
		|	И СправочникНоменклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Товар)
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходнаяТовары.Номенклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТТЧ.Номенклатура КАК Номенклатура,
		|	ВТТЧ.Номенклатура.Представление КАК НоменклатураПредставление,
		|	ВТТЧ.Количество КАК Количество,
		|	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ТоварыНаСкладахОстатки.Партия КАК Партия,
		|	ЕСТЬNULL(ТоварыНаСкладахОстатки.СуммаОстаток, 0) КАК СуммаОстаток
		|ИЗ
		|	ВТТЧ КАК ВТТЧ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыНаСкладах.Остатки(
		|				&МоментВремени,
		|				Номенклатура В
		|						(ВЫБРАТЬ
		|							ВТТЧ.Номенклатура
		|						ИЗ
		|							ВТТЧ КАК ВТТЧ)
		|					И Склад = &Склад) КАК ТоварыНаСкладахОстатки
		|		ПО ВТТЧ.Номенклатура = ТоварыНаСкладахОстатки.Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	ТоварыНаСкладахОстатки.Партия.МоментВремени
		|ИТОГИ
		|	МАКСИМУМ(Количество),
		|	СУММА(КоличествоОстаток)
		|ПО
		|	Номенклатура";
	
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		Если ВыборкаНоменклатура.Количество > ВыборкаНоменклатура.КоличествоОстаток Тогда
			Отказ = Истина;
			Сообщить("Недостаточно " + ВыборкаНоменклатура.НоменклатураПредставление);
		КонецЕсли;
		КоличествоСписать = ВыборкаНоменклатура.Количество;
		
		ВыборкаДетальныеЗаписи = ВыборкаНоменклатура.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
 			Количество = Мин(КоличествоСписать, ВыборкаДетальныеЗаписи.КоличествоОстаток);
			Если Количество = ВыборкаДетальныеЗаписи.КоличествоОстаток Тогда
				Себестоимость = ВыборкаДетальныеЗаписи.СуммаОстаток;
			Иначе
				Себестоимость = ВыборкаДетальныеЗаписи.СуммаОстаток * Количество / ВыборкаДетальныеЗаписи.КоличествоОстаток;
			КонецЕсли;
			Движение = Движения.ТоварыНаСкладах.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Склад = Склад;
			Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
			Движение.Количество = Количество;
			Движение.Сумма = Себестоимость;
			Движение.Партия = ВыборкаДетальныеЗаписи.Партия;
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры
